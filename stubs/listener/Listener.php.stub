<?php

namespace {namespace};

use Bolt\Events\StorageEvent;
use Pimple as Container;
use Symfony\Component\EventDispatcher\EventSubscriberInterface;

class {name} implements EventSubscriberInterface
{
    /** @var Container */
    private $container;

    /** @var array */
    private $config;

    /**
     * Initiate the listener with Bolt Application instance and extension config.
     *
     * @param Container $container
     * @param $config
     */
    public function __construct(Container $container, array $config)
    {
        $this->container = $container;
        $this->config = $config;
    }

    // /**
    //  * EXAMPLE
    //  *
    //  * Handles POST_SAVE storage event
    //  *
    //  * @param StorageEvent $event
    //  */
    // public function onPostSave(StorageEvent $event)
    // {
    //     $id = $event->getId();
    //     $contenttype = $event->getContentType();
    //     $record = $event->getContent();
    //     $created = $event->isCreate();
    // }

    /**
     * {@inheritdoc}
     */
    public static function getSubscribedEvents()
    {
        return [];
    }
}
